name: CI

on:
  push:
    branches:
      - master
      - main
      - ci
      - ci/*
  pull_request:
    branches:
      - master
      - main
      - ci
      - ci/*

env:
  artifact: EsnyaResoniteModTemplate.dll
  project_path: EsnyaResoniteModTemplate

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            Directory.Packages.props
            **/*.csproj
      - name: Restore tools
        run: dotnet tool restore
      - name: Run csharpier check
        run: dotnet csharpier check .

  build:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            Directory.Packages.props
            **/*.csproj
      - name: Restore tools
        run: dotnet tool restore
      - name: Cache Resonite libraries
        uses: actions/cache@v4
        with:
          path: Resonite
          key: RML-4.0.0
      - name: Prepare Resonite libraries
        run: |
          mkdir -p Resonite/Libraries Resonite/rml_libs
          if [ ! -f Resonite/Libraries/ResoniteModLoader.dll ]; then
            curl -L -o Resonite/Libraries/ResoniteModLoader.dll https://github.com/resonite-modding-group/ResoniteModLoader/releases/download/4.0.0/ResoniteModLoader.dll
          fi
          if [ ! -f Resonite/rml_libs/0Harmony.dll ]; then
            curl -L -o Resonite/rml_libs/0Harmony.dll https://github.com/resonite-modding-group/ResoniteModLoader/releases/download/4.0.0/0Harmony.dll
          fi
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --configuration Release --no-build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact }}
          path: ${{ env.project_path }}/bin/Release/net9.0/${{ env.artifact }}

  prepare-release:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/ci' || startsWith(github.ref, 'refs/heads/ci/'))
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get version from Directory.Build.props
        id: get_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Directory.Build.props)
          echo "Version=$VERSION" >> $GITHUB_OUTPUT
      - name: Debug version info
        run: echo "Found version: ${{ steps.get_version.outputs.Version }}"
      - name: Pull tags
        run: git fetch --tags
      - name: Check if tag exists
        id: check_tag
        run: echo "TagExists=$(git tag -l v${{ steps.get_version.outputs.Version }})" >> $GITHUB_OUTPUT
    outputs:
      should_release: ${{ steps.check_tag.outputs.TagExists == '' }}
      version: ${{ steps.get_version.outputs.Version }}

  release:
    if: needs.prepare-release.outputs.should_release == 'true'
    needs: [build, prepare-release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create tag
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "v${{ needs.prepare-release.outputs.version }}"
          git push origin "v${{ needs.prepare-release.outputs.version }}"
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.artifact }}
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.artifact }}
          generate_release_notes: true
          tag_name: v${{ needs.prepare-release.outputs.version }}

